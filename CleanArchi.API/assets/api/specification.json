{
  "swagger": "2.0",
  "info": {
    "title": "CleanArchi API",
    "description": "Simple exemple de clean architecture en Web Api .net8 + EFCore 8 + Identity",
    "contact": {
      "name": "Contact",
      "url": "https://www.cognitic.be/contactez-nous"
    },
    "version": "v1"
  },
  "paths": {
    "/account/register": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          }
        }
      }
    },
    "/account/login": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "useCookies",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "useSessionCookies",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessTokenResponse"
            }
          }
        }
      }
    },
    "/account/refresh": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessTokenResponse"
            }
          }
        }
      }
    },
    "/account/confirmEmail": {
      "get": {
        "tags": [
          "CleanArchi.API"
        ],
        "operationId": "MapIdentityApi-/account/confirmEmail",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "changedEmail",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/account/resendConfirmationEmail": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ResendConfirmationEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/account/forgotPassword": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          }
        }
      }
    },
    "/account/resetPassword": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          }
        }
      }
    },
    "/account/manage/2fa": {
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TwoFactorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TwoFactorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/account/manage/info": {
      "get": {
        "tags": [
          "CleanArchi.API"
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InfoResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "CleanArchi.API"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InfoResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/HttpValidationProblemDetails"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Members": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get all members",
        "description": "Sample request:\r\n            \r\n    GET /api/Members",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns all members",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MemberDTO"
              }
            }
          },
          "401": {
            "description": "If your are not authenticated",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResponse": {
      "type": "object",
      "properties": {
        "tokenType": {
          "type": "string",
          "readOnly": true
        },
        "accessToken": {
          "type": "string"
        },
        "expiresIn": {
          "format": "int64",
          "type": "integer"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "HttpValidationProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": {}
    },
    "InfoRequest": {
      "type": "object",
      "properties": {
        "newEmail": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "InfoResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "isEmailConfirmed": {
          "type": "boolean"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "twoFactorCode": {
          "type": "string"
        },
        "twoFactorRecoveryCode": {
          "type": "string"
        }
      }
    },
    "MemberDTO": {
      "required": [
        "email",
        "gender",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "minLength": 1,
          "type": "string"
        },
        "gender": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "RefreshRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ResendConfirmationEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "resetCode": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "TwoFactorRequest": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "twoFactorCode": {
          "type": "string"
        },
        "resetSharedKey": {
          "type": "boolean"
        },
        "resetRecoveryCodes": {
          "type": "boolean"
        },
        "forgetMachine": {
          "type": "boolean"
        }
      }
    },
    "TwoFactorResponse": {
      "type": "object",
      "properties": {
        "sharedKey": {
          "type": "string"
        },
        "recoveryCodesLeft": {
          "format": "int32",
          "type": "integer"
        },
        "recoveryCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTwoFactorEnabled": {
          "type": "boolean"
        },
        "isMachineRemembered": {
          "type": "boolean"
        }
      }
    }
  }
}